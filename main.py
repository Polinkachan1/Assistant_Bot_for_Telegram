import telebot
from telebot import types
import json
from geopy import geocoders
import requests

token = '5845372418:AAHcJJDSzuUd74O2vgGBXkhUY929jFxFuPY'
api_key = 'e056937d-4d55-412f-ae71-ec9be10f67af'
bot = telebot.TeleBot(token)
city = '–í–æ–ª–≥–æ–¥–æ–Ω—Å–∫'


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    edit_button = types.KeyboardButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª')
    settings_button = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    markup.add(edit_button, settings_button)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç ‚úå', reply_markup=markup)


@bot.message_handler(commands=['return_to_menu'])
def return_to_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    edit_button = types.KeyboardButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª')
    settings_button = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    markup.add(edit_button, settings_button)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –ø—É–Ω–∫—Ç –º–µ–Ω—é', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def handle_replies(message):
    if message.text == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        delete_button = types.KeyboardButton('‚ûñ  –£–¥–∞–ª–∏—Ç—å –¥–µ–ª–æ')
        add_button = types.KeyboardButton('‚ûïÔ∏è  –î–æ–±–∞–≤–∏—Ç—å –¥–µ–ª–æ')
        markup.add(delete_button, add_button)
        bot.send_message(message.chat.id, text='–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)

    elif message.text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        weather_button = types.KeyboardButton('üå©Ô∏è –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã')
        notification_time_button = types.KeyboardButton('üîî –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π')
        markup.add(weather_button, notification_time_button)
        bot.send_message(message.chat.id, text='–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å?', reply_markup=markup)

    elif message.text == '‚ûñ  –£–¥–∞–ª–∏—Ç—å –¥–µ–ª–æ':
        ...  # –¥–æ–ª–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª –∏ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, –∫–∞–∫–æ–µ –∏–∑ –Ω–∏—Ö —É–¥–∞–ª–∏—Ç—å

    elif message.text == '‚ûïÔ∏è  –î–æ–±–∞–≤–∏—Ç—å –¥–µ–ª–æ':
        ...  # –¥–æ–ª–∂–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ª–∞ –∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –æ –Ω–µ–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å

    elif message.text == 'üå©Ô∏è –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã':
        markup = types.InlineKeyboardMarkup()
        weather_inline_yes = types.InlineKeyboardButton('‚úÖ –î–∞', callback_data='Yes')
        weather_inline_no = types.InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data='No')
        markup.add(weather_inline_yes, weather_inline_no)
        bot.send_message(message.chat.id, text='–í—ã —Ö–æ—Ç–∏—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã?'.format(message.from_user),
                         reply_markup=markup)
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ –Ω–∞–ø–∏—à–∏—Ç–µ: "–≥–æ—Ä–æ–¥  *–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞* "')

    elif message.text == 'üîî –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π':
        ...  # –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Ä–µ–º–µ–Ω–∏,
        # –∫–æ–≥–¥–∞ –µ–º—É –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –µ–≥–æ —Å–ø–∏—Å–∫–µ –¥–µ–ª

    elif message.text[:5].lower().startswith('–≥–æ—Ä–æ–¥'):  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        global city
        city = message.text[6:].strip()


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    request = call.data.split('_')

    if request[0] == 'Yes':
        bot.answer_callback_query(call.id, text='–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã')
    elif request[0] == 'No':
        bot.answer_callback_query(call.id, text='–ë–æ–ª—å—à–µ –≤—ã –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã')


def get_weather() -> str:  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ
    geolocator = geocoders.Nominatim(user_agent="telebot")
    latitude = str(geolocator.geocode(city).latitude)
    longitude = str(geolocator.geocode(city).longitude)
    response = requests.get(f'https://api.weather.yandex.ru/v2/forecast/?lat={latitude}&lon={longitude}&lang=ru_RU',
                            headers={"X-Yandex-API-Key": 'e056937d-4d55-412f-ae71-ec9be10f67af'})
    data = response.json()
    day_forecast = data['forecasts'][0]['parts']['day_short']
    return f'''–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {day_forecast["temp"]} ¬∞C, 
—Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {day_forecast["wind_speed"]} –º/—Å, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤ {day_forecast["prec_prob"]}%'''


bot.polling(none_stop=True, interval=0)
